using System;

namespace классы_обьектыкласс
{
    class Program
    {
        //отдельный класс представляет собой отдельный тип,как int 
        //используя данную переменную мы можем обращаться к функционала класса User.для этого мы доджны обозначить переменную в main
        //и потом через точку обращаться к методам класса
        //но чтобы использовать ссылку на переменнуданного класса нужно чтобы она указывала на обьект данного класса



        static void Main(string[] args)
        {
            User tom = new User("Tomas",543);//2 конст

           // tom.Age = 21;
            //tom.Name = "Tomas";

            tom.Info();
            User bob = new User("Boob");//3 конст
            //bob.Age = 24;
           // bob.Name = "Bob";
            bob.Info();
            User ildar = new User();
            /*1 конст верез инициальзацию,мы можем задать обекту значения*/


            // ildar.Age = 21;
            //ldar.Name = "Ildar";

            tom.Info();
        }
    }
    
    class User
    {//по логике программы у нас есть конструткор по умолчанию
        //но мы можем создать свой конструктор
        //конструктор представдляет собой обычный метод имеющий имя класс
        public string Name = "";
        public int Age;
        public  User(string Name)
        {
           this.Name = Name;//в данном примере программа ввидит что this.Name представляет парамаетр класса(глобальную переменную),а пепеменная Name представляет переменную метода
        }
        public User()
        {
        //можно создать пустой конструктор,который тоже может создавать обьект
        }
        public User(string n,int a): this(n)//в данном случае this  вызовет второй конструктор,чтообы сократить написаниет третьего метода
        {
           // Name = n;(мы можем убрать эту чать  из за this)
            Age = a;
            //усли мы определили свой конструтор, то конструктор по умолчанию не будет работать
        }
        public void Info()
        {
            Console.Write($"\n{Name} - {Age}\t");

        }
        //через слово this мы можем ссылаться на функционал класса в самом классе
    }
}
